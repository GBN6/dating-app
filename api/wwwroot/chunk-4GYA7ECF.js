import{a as A}from"./chunk-DE7X7RVW.js";import{a as m,b as d}from"./chunk-DEM2V6YX.js";import{a as b}from"./chunk-SLUF46T5.js";import{ba as S}from"./chunk-OQHUP3JO.js";import{$ as i,J as g,T as a,X as s,Z as l,a as p,k as h,rc as v,t as c,ua as u}from"./chunk-U7UGUVDU.js";var f=new l("USER_DATA"),L=new l("USER_DATA_VALUE");var o=class r{http=i(v);httpWithSnackbar=i(b);API_URL=S.API_URL;login(t){return this.httpWithSnackbar.post(`${this.API_URL}/account/login`,"You successfully logged in.",t)}register(t){return this.httpWithSnackbar.post(`${this.API_URL}/account/register`,"You successfully registered.",t)}logout(){return this.httpWithSnackbar.post(`${this.API_URL}/account/logout`,"You successfully logged out.",null)}getUserData(){return this.http.get(`${this.API_URL}/users/profile`)}static \u0275fac=function(e){return new(e||r)};static \u0275prov=s({token:r,factory:r.\u0275fac,providedIn:"root"})};var U=class r{static useIsAuthorized$(){return i(f).pipe(c(t=>!!t))}authApiService=i(o);jwtService=i(A);likeService=i(m);presenceService=i(d);_isLoggedIn=u(!1);_roles=u(null);_authState$=new h({userData:null});isLoggedIn=this._isLoggedIn.asReadonly();roles=this._roles.asReadonly();userData$=this._authState$.asObservable();getUserDataValue(){return this._authState$.value.userData}register(t){return this.authApiService.register(t).pipe(a(({token:e,userData:n})=>this.setLoggedData(e,n)))}login(t){return this.authApiService.login(t).pipe(a(({token:e,userData:n})=>this.setLoggedData(e,n)))}logout(){return this.authApiService.logout().pipe(a(()=>{this.setUserData(null),this.jwtService.removeToken(),this.presenceService.stopHubConnection(),this._isLoggedIn.set(!1)}))}initializeAuth(){this.jwtService.isTokenValid()&&(this._isLoggedIn.set(!0),this.authApiService.getUserData().pipe(a(t=>this.setUserData(t))).subscribe(),this.presenceService.createHubConnection(this.jwtService.token))}setUserData(t){this.patchState({userData:t}),this.likeService.getLikeIds$().subscribe(),this._roles.set(this.jwtService.getRolesFromToken())}setLoggedData(t,e){this._isLoggedIn.set(!0),this.jwtService.saveToken(t),this.setUserData(e),this.presenceService.createHubConnection(t)}patchState(t){this._authState$.next(p(p({},this._authState$.value),t))}getStateSlice$(t){return this._authState$.pipe(g(t),c(e=>e[t]))}static \u0275fac=function(e){return new(e||r)};static \u0275prov=s({token:r,factory:r.\u0275fac,providedIn:"root"})};export{f as a,L as b,U as c};
