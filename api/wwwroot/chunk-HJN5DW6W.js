import{a as g}from"./chunk-SLUF46T5.js";import{ba as r,ca as m,da as b,ea as l}from"./chunk-OQHUP3JO.js";import{$ as o,X as p,e as c,rc as u,ua as h}from"./chunk-U7UGUVDU.js";var d=class i{httpClient=o(u);httpWithSnackbar=o(g);API_URL=r.API_URL;HUBS_URL=r.HUBS_URL;hubConnection;_messages=h([]);messages=this._messages.asReadonly();createHubConnection(e,n){this.hubConnection=new l().withUrl(`${this.HUBS_URL}/message?user=${n}`,{accessTokenFactory:()=>e}).configureLogging(m.None).withAutomaticReconnect().build(),this.hubConnection.start().catch(t=>{console.error("Error starting SignalR hub connection:",t)}),this.hubConnection.on("ReceiveMessageThread",t=>{this._messages.set(t)}),this.hubConnection.on("NewMessage",t=>this._messages.update(s=>[...s,t])),this.hubConnection.on("UpdatedGroup",t=>{t.connections.some(s=>s.username===n)&&this._messages.update(s=>(s.forEach(a=>{a.dateRead&&(a.dateRead=new Date(Date.now()))}),s))})}stopHubConnection(){this.hubConnection?.state===b.Connected&&this.hubConnection.stop().catch(e=>console.error("Error stopping SignalR hub connection:",e))}getMessages$(e){return this.httpClient.get(`${this.API_URL}/messages`,{params:e})}deleteMessage$(e){return this.httpWithSnackbar.delete(`${this.API_URL}/messages/${e}`,"Message deleted successfully")}getMessageThread$(e){return this.httpClient.get(`${this.API_URL}/messages/thread/${e}`)}sendMessage(e,n){return c(this,null,function*(){return this.hubConnection?.invoke("SendMessage",{recipientUsername:e,content:n})})}static \u0275fac=function(n){return new(n||i)};static \u0275prov=p({token:i,factory:i.\u0275fac,providedIn:"root"})};export{d as a};
